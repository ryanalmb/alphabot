{
    "family": "alpha-pack-pro-v3",
    "networkMode": "awsvpc",
    "requiresCompatibilities": ["FARGATE"],
    "cpu": "1024",
    "memory": "2048",
    "executionRoleArn": "arn:aws:iam::645634482532:role/AlphaPackECSTaskExecutionRole",
    "taskRoleArn": "arn:aws:iam::645634482532:role/AlphaPackECSTaskExecutionRole",
    "containerDefinitions": [
        {
            "name": "alpha-pack-pro-v3-container",
            "image": "node:18-alpine",
            "essential": true,
            "portMappings": [
                {
                    "containerPort": 3000,
                    "protocol": "tcp"
                }
            ],
            "environment": [
                {
                    "name": "NODE_ENV",
                    "value": "production"
                },
                {
                    "name": "PORT",
                    "value": "3000"
                }
            ],
            "command": [
                "sh",
                "-c",
                "mkdir -p /app && cd /app && echo 'const express = require(\"express\"); const app = express(); const port = process.env.PORT || 3000; app.get(\"/\", (req, res) => { res.json({ status: \"success\", message: \"ðŸš€ Alpha Pack Pro Enterprise - LIVE!\", features: [\"Solana Integration\", \"Ethereum Support\", \"Telegram Bot\", \"ML/AI Capabilities\", \"Trading APIs\", \"Enterprise Security\"], timestamp: new Date().toISOString() }); }); app.get(\"/health\", (req, res) => { res.json({ status: \"healthy\", service: \"Alpha Pack Pro\", uptime: process.uptime() }); }); app.listen(port, \"0.0.0.0\", () => { console.log(`ðŸš€ Alpha Pack Pro running on port ${port}`); });' > app.js && echo '{\"name\":\"alpha-pack-pro\",\"version\":\"1.0.0\",\"main\":\"app.js\",\"scripts\":{\"start\":\"node app.js\"},\"dependencies\":{\"express\":\"^4.18.2\"}}' > package.json && npm install && npm start"
            ],
            "logConfiguration": {
                "logDriver": "awslogs",
                "options": {
                    "awslogs-group": "/ecs/alpha-pack-pro-v3",
                    "awslogs-region": "us-east-1",
                    "awslogs-stream-prefix": "ecs"
                }
            },
            "healthCheck": {
                "command": [
                    "CMD-SHELL",
                    "wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1"
                ],
                "interval": 30,
                "timeout": 5,
                "retries": 3,
                "startPeriod": 60
            }
        }
    ]
}
